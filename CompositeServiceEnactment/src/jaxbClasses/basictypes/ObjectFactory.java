/*******************************************************************************
 * Copyright 2016 Gabriela D. A. Guardia
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at

 *    http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*******************************************************************************/

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.04.05 at 03:08:21 PM BRT 
//

package jaxbClasses.basictypes;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the jaxbClasses.basictypes package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: jaxbClasses.basictypes
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link SemanticConcept }
     * 
     */
    public SemanticConcept createSemanticConcept() {
        return new SemanticConcept();
    }

    /**
     * Create an instance of {@link DiscoverServicesMatching }
     * 
     */
    public DiscoverServicesMatching createDiscoverServicesMatching() {
        return new DiscoverServicesMatching();
    }

    /**
     * Create an instance of {@link BindingInfo }
     * 
     */
    public BindingInfo createBindingInfo() {
        return new BindingInfo();
    }

    /**
     * Create an instance of {@link Input }
     * 
     */
    public Input createInput() {
        return new Input();
    }

    /**
     * Create an instance of {@link InputToValidate }
     * 
     */
    public InputToValidate createInputToValidate() {
        return new InputToValidate();
    }

    /**
     * Create an instance of {@link InterfaceInfo }
     * 
     */
    public InterfaceInfo createInterfaceInfo() {
        return new InterfaceInfo();
    }

    /**
     * Create an instance of {@link ContextValue }
     * 
     */
    public ContextValue createContextValue() {
        return new ContextValue();
    }

    /**
     * Create an instance of {@link ServInputToResolve }
     * 
     */
    public ServInputToResolve createServInputToResolve() {
        return new ServInputToResolve();
    }

    /**
     * Create an instance of {@link CompositePair }
     * 
     */
    public CompositePair createCompositePair() {
        return new CompositePair();
    }

    /**
     * Create an instance of {@link Output }
     * 
     */
    public Output createOutput() {
        return new Output();
    }

    /**
     * Create an instance of {@link SuggestionValue }
     * 
     */
    public SuggestionValue createSuggestionValue() {
        return new SuggestionValue();
    }

    /**
     * Create an instance of {@link CompositeStructure }
     * 
     */
    public CompositeStructure createCompositeStructure() {
        return new CompositeStructure();
    }

    /**
     * Create an instance of {@link ServiceInfo }
     * 
     */
    public ServiceInfo createServiceInfo() {
        return new ServiceInfo();
    }

    /**
     * Create an instance of {@link InputValidation }
     * 
     */
    public InputValidation createInputValidation() {
        return new InputValidation();
    }

    /**
     * Create an instance of {@link IncludedServiceStructure }
     * 
     */
    public IncludedServiceStructure createIncludedServiceStructure() {
        return new IncludedServiceStructure();
    }

    /**
     * Create an instance of {@link InputMatching }
     * 
     */
    public InputMatching createInputMatching() {
        return new InputMatching();
    }

    /**
     * Create an instance of {@link MatchingService }
     * 
     */
    public MatchingService createMatchingService() {
        return new MatchingService();
    }

    /**
     * Create an instance of {@link Node }
     * 
     */
    public Node createNode() {
        return new Node();
    }

    /**
     * Create an instance of {@link Tree }
     * 
     */
    public Tree createTree() {
        return new Tree();
    }

    /**
     * Create an instance of {@link ResolvingServiceMatching }
     * 
     */
    public ResolvingServiceMatching createResolvingServiceMatching() {
        return new ResolvingServiceMatching();
    }

    /**
     * Create an instance of {@link InputFunctRequest }
     * 
     */
    public InputFunctRequest createInputFunctRequest() {
        return new InputFunctRequest();
    }

    /**
     * Create an instance of {@link InvalidInputs }
     * 
     */
    public InvalidInputs createInvalidInputs() {
        return new InvalidInputs();
    }

}
